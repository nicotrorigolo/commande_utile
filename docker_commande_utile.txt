Information docker réseau
Les container sont en utilisant le network docker0
L'adresse IP de la gateway docker0 peut être trouvé avec la commande "ifconfig"
L'adresse IP du docker0 est en génréral : 172.17.0.1

Se connecter au repo docker
docker login {url_du_repo_docker}

Se connecter au repo docker sans taper l'identifiant et le mot de passe
docker login {url_du_repo_docker} -u {user} -p {mdp}

Se connecter au repo docker sans taper l'identifiant et le mot de passe mais avec token
docker login {url_du_repo_docker} -u {user} -p {token}

Pousser une image
docker tag {nom_image} {url_du_repo_docker}/{{nom_dossier}}/{{nom_image}}
docker push {url_du_repo_docker}/{{nom_dossier}}/{{nom_image}}

commande pour vider le cache :
docker system prune -a

commande pour builder sans utiliser le cache
docker build --no-cache -t {nom_image} .

commande pour lancer un container et rentrer dedans
docker run -it {nom_du_container} bash

commande pour lancer un container rentrer dedans et partager des fichiers
docker run -v ${WORKSPACE}:/robots -it {nom_du_container} bash

commande pour lancer un container rentrer dedans et partager des fichiers et mettre des variables d'environnement dans le container
docker run -v {chemin_dossier_en_local_a_partage}:{chemin_du_dossier_dans_le_container} -e {nom_de_la_variable}={valeur_de_la_variable} -it {nom_du_container} bash

commande pour faire du docker in docker
docker run -v /var/run/docker.sock:/var/run/docker.sock {nom_image}

commande pour créer un network
docker network create --subnet={adresse_ip}/{plage_adresse_ip} {nom_network}
  ex: docker network create --subnet=172.21.0.0/16 mon_network_que_g_cree

commande pour definir une adresse ip au container (mais il faut avant créer un network)
docker run --net {nom_network} --ip {adresse_ip} {nom_image}
  ex: docker run --net mon_network_que_g_cree --ip 172.21.0.10 mon_image_que_g_cree

Deployer un container rapidement pour faire un tests
docker run -d tutum/hello-world


